/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.agiledge.atom.servlets;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.agiledge.atom.commons.OtherFunctions;
import com.agiledge.atom.dao.EmployeeDao;
import com.agiledge.atom.dao.ValidateUser;
import com.agiledge.atom.dto.EmployeeDto;

/**
 * 
 * @author Shahid
 */
public class UserValidation extends HttpServlet {
/*
	public static String DBusername;
	public static String DBpassword;
	public static String instance;
	public static String location;
	public static String DBname;

	@Override
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		DBusername = config.getInitParameter("DBuserName");
		DBpassword = config.getInitParameter("DBpassword");
		instance = config.getInitParameter("instance");
		location = config.getInitParameter("location");
		DBname = config.getInitParameter("DBname");
	}
	*/

	/**
	 * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
	 * methods.
	 * 
	 * @param request
	 *            servlet request
	 * @param response
	 *            servlet response
	 * @throws ServletException
	 *             if a servlet-specific error occurs
	 * @throws IOException
	 *             if an I/O error occurs
	 */
	protected void processRequest(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		
		HttpSession session = request.getSession(true);
		boolean needToChangePwd = false;

		String username = request.getParameter("uname") == null ? "" : request
				.getParameter("uname");
		String password = request.getParameter("pass") == null ? "" : request
				.getParameter("pass");
		String prePage = "" + request.getParameter("prePage");
		if (username.equals("") || password.equals("")) {
			System.out.println("User name or passwor is blank");
			response.sendRedirect("index.jsp?message=Invalid User Name/Password !");
			return;
		} else {
			System.out.println("before conncting to DB");
			ValidateUser ob = new ValidateUser();
			ob.SetUserNamePassword(username, password);
			boolean status = ob.checkUser();
			if (status) {
				String role = ob.role;
				String roleId = ob.roleId;
				System.out.println("role " + role + "user->" + ob.uid
						+ "delegatedUId" + ob.delegatedUId + "delegatedUrole"
						+ ob.delegatedUrole);

				session.setAttribute("user", ob.uid);

				EmployeeDto emp = new EmployeeDao()
						.getEmployeeByLogin(username);
				System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>");
				System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>"+emp.getPasswordchangedate());
				if (emp.getExternaluser().equalsIgnoreCase("yes")
						&& emp.getAuthtype().equalsIgnoreCase("l")) {
					
					if (emp.getPasswordchangedate() == null
							|| emp.getPasswordchangedate().equals("")) {
						needToChangePwd = true;
					} else if (new OtherFunctions().checkDate90(emp
							.getPasswordchangedate())) {
						System.out.println("here");
						needToChangePwd = true;
					}
				}

				if (ob.delegatedUId != null
						&& (!ob.delegatedUId.equals("null"))
						&& (!ob.delegatedUId.equals(""))) {
					session.setAttribute("delegatedId", ob.delegatedUId);
					role = ob.delegatedUrole;
					roleId = ob.delegatedUroleId;
				}
				System.out.println(" role: " + role);

				session.setAttribute("role", role);
				session.setAttribute("roleId", roleId);
				if (ob.site != null && !ob.site.trim().equals("")) {
					session.setAttribute("site", ob.site);
				}
				String indexPage = "";
				try {
					indexPage = prePage.substring(0, prePage.indexOf("?"));
				} catch (Exception e) {
					// System.out.println(" index of ? : " +
					// prePage.indexOf("?")
					// + " in " + prePage);
				}
				
				if (needToChangePwd) {
					System.out.println("IN Need to chANGE");
					session.setAttribute("username", username);
					System.out.println("IN Need to chANGE"+session.getAttribute("user"));							
					session.setAttribute("password", password);
					System.out.println("IN Need to chANGE"+session.getAttribute("role"));
					
					response.sendRedirect("changePassword.jsp");
				}else if (prePage == null || prePage.equals("null")
						|| prePage.equals("") || indexPage.equals("index.jsp")) {

					if (role.equalsIgnoreCase("emp")) {
						response.sendRedirect("employee_home.jsp");
					}
					if (role.equalsIgnoreCase("hrm")) {
						response.sendRedirect("manager_home.jsp");
					}
					if (role.equalsIgnoreCase("tm")) {
						response.sendRedirect("transportmanager_home.jsp");
						//request.getRequestDispatcher("WEB-INF/check.jsp").forward(request, response);
					}
					if (role.equalsIgnoreCase("ta")) {
						response.sendRedirect("transportmanager_home.jsp");
						//request.getRequestDispatcher("WEB-INF/check.jsp").forward(request, response);
					}
					if (role.equalsIgnoreCase("hq")) {
						response.sendRedirect("admin_home.jsp");
					}
					if (role.equalsIgnoreCase("v")) {
						System.out.println("INNNNNN"+role+ob.vendorId);
						session.setAttribute("vendorCompany",ob.vendorId);
						response.sendRedirect("vendors_home.jsp");
					}
				} else {
					response.sendRedirect(prePage);
				}

			} else {

				response.sendRedirect("index.jsp?message=Invalid User Name/Password !");
				return;
			}
						
			
						
		}

	}

	// <editor-fold defaultstate="collapsed"
	// desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
	/**
	 * Handles the HTTP <code>GET</code> method.
	 * 
	 * @param request
	 *            servlet request
	 * @param response
	 *            servlet response
	 * @throws ServletException
	 *             if a servlet-specific error occurs
	 * @throws IOException
	 *             if an I/O error occurs
	 */

	@Override
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {

		processRequest(request, response);

	}

	/**
	 * Handles the HTTP <code>POST</code> method.
	 * 
	 * @param request
	 *            servlet request
	 * @param response
	 *            servlet response
	 * @throws ServletException
	 *             if a servlet-specific error occurs
	 * @throws IOException
	 *             if an I/O error occurs
	 */
	@Override
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		processRequest(request, response);
	}

	/**
	 * Returns a short description of the servlet.
	 * 
	 * @return a String containing servlet description
	 */
	@Override
	public String getServletInfo() {
		return "Short description";
	}// </editor-fold>
}
