package com.agiledge.atom.constants;

import com.agiledge.atom.commons.OtherFunctions;
import java.io.*;
import java.util.*;

public class SettingsConstant
{

    public static final String SHIFT_EXTENSTION = "shiftExtension";
    public static final String HOTEL_OR_AIRPORT = "hotelAirport";
    public static final String AT_DISPOSAL = "atDisposal";
    public static final String pointToPoint = "pointToPoint";
    public static final String intervalOrPeriod = "intervalOrPeriod";
    public static final String airportTransfer = "airportTransfer";
    public static final String MODULE = "module";
    public static final String SUB_MODULE = "subModule";
    public static final String ADHOC = "adhoc";
    public static final String TYPE = "type";
    public static final String ACTIVE_STATUS = "a";
    public static final String WAITING_LIST = "wl";
    public static final String CANCEL_REQUESTED = "cr";
    public static final String TRANSPORT = "transport";
    public static final String CANCELLED_STATUS = "c";
    public static final String SHIFT = "shift";
    public static final String SHUTTLE = "shuttle";
    public static final String MAP_DISTANCE_TYPE = "";
    public static final String INTEGER_ACTIVE = "1";
    public static final String APPROVED = "approved";
    public static final String NOT_APPROVED = "notapproved";
    public static final String TRIP_TRACKING = "trip tracking";
    public static final String DEVICE_CONFIGURATION = "device configuration";
    public static final String TRACKING_MODULE = "TRACKING";
    public static String TRACKING_METHOD = "DOUBLE_APPROVAL";
    public static String APPROVAL_TYPE = "Sent for TM approval";
    public static final String hrm = "REPORTING OFFICER";
    public static final String pm = "PROCESS MANAGER";
    public static final String emp = "PROCESS ASSOCIATE";
    public static final String PROJECT_TERM = "PROCESS";
    public static final String PROJECT_UNIT_TERM = "DEPARTMENT";
    public static String transportTeamNumber = "";
    public static String transportTeamEmail = "";
    public static String emailFlag = "";
    public static String smsFlag = "";
    public static String validationFlag = "";
    public static String utiltiyRun = "";
    public static String pullEmployee = "";
    public static String pullproject = "";
    public static String getEmpSource = "";
    public static String url = "";
    public static String empAuthinticationForComet = "";
    public static String comp = "uat";
    public static String emailForScheduleEmployee = "";
    public static String propertyFile = "";
    public static String hibernateFile = "";
    public static String dayreportBean = "";
    public static String felxibleVehicleType = "";
    public static String scheduleCutOff = "";
    public static String scheduleCutOffStartDay = "";
    public static String scheduleCutOffEndDay = "";
    public static String scheduleCutOffStartTime = "";
    public static String scheduleCutOffDuration = "";
    public static String showDesigOrRole = "";
    public static String shiftExtensionWithoutSchedule = "";
    public static String vehicleAssignCutOff = "";
	public static String vehicleAssignCutOffDuration="";
    public static String driverPassword = "otp";
    public static String escortpwd = "otp";
    public static String andrioidTripDetailsCount="";
    
    public static Map<String, String> deviceMap = new HashMap<String, String>();
    public static Map<String, String> tripMap = new HashMap<String, String>();
    public static ArrayList<String> inpicLogs= new ArrayList<String>();
    public static ArrayList<String> outLogs = new ArrayList<String>();
    
    public SettingsConstant()
    {
    }

    public static String getVal(String strconstant)
    {
        if(strconstant.equalsIgnoreCase("shiftExtension"))
        {
            return "Shift Extension";
        } else
        {
            return strconstant;
        }
    }

    public static void setCompany()
    {
        System.out.println((new StringBuilder(" company : ")).append(comp).toString());
        if(comp.equalsIgnoreCase("gss"))
        {
            transportTeamNumber = "08033451343";
            transportTeamEmail = "blr2transport.sips.in@siemens.com";
            emailFlag = "gss";
            smsFlag = "gss";
            validationFlag = "api";
            utiltiyRun = "yes";
            pullEmployee = "no";
            getEmpSource = "uat";
            emailForScheduleEmployee = "no";
            url = "jdbc:mysql://localhost:3306/atomcoredemo";
            propertyFile = "gssdb.property";
            hibernateFile = "hibernate.cfg.gss.xml";
            empAuthinticationForComet = "loginid";
            dayreportBean = "DayreportBeangss";
            felxibleVehicleType = "true";
            scheduleCutOff = "true";
            scheduleCutOffStartDay = "Wednesday";
            scheduleCutOffStartTime = "10:00";
            scheduleCutOffDuration = "54:00";
            showDesigOrRole = "role";
            shiftExtensionWithoutSchedule = "yes";
            driverPassword = "mobileno";
            vehicleAssignCutOff = "true";
            vehicleAssignCutOffDuration="00:45";
			andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("gss1"))
        {
            transportTeamNumber = "08033451343";
            transportTeamEmail = "blr2transport.sips.in@siemens.com";
            emailFlag = "gss";
            smsFlag = "gss";
            validationFlag = "api";
            utiltiyRun = "no";
            pullEmployee = "no";
            getEmpSource = "uat";
            emailForScheduleEmployee = "no";
            url = "jdbc:mysql://10.20.14.4:3306/atomcoredemo";
            propertyFile = "gssdb.property";
            hibernateFile = "hibernate.cfg.gss1.xml";
            empAuthinticationForComet = "loginid";
            dayreportBean = "DayreportBeangss1";
            felxibleVehicleType = "true";
            scheduleCutOff = "true";
            scheduleCutOffStartDay = "Wednesday";
            scheduleCutOffStartTime = "10:00";
            scheduleCutOffDuration = "54:00";
            showDesigOrRole = "role";
            shiftExtensionWithoutSchedule = "yes";
            driverPassword = "mobileno";
            vehicleAssignCutOff = "true";
            vehicleAssignCutOffDuration="00:45";
            andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("gssUAT"))
        {
            transportTeamNumber = "08033451343";
            transportTeamEmail = "blr2transport.sips.in@siemens.com";
            emailFlag = "uat";
            smsFlag = "uat";
            validationFlag = "api";
            utiltiyRun = "no";
            pullEmployee = "no";
            getEmpSource = "uat";
            emailForScheduleEmployee = "no";
            url = "jdbc:mysql://localhost:3306/atomcoredemouat";
            propertyFile = "gssdb.property";
            hibernateFile = "hibernate.cfg.gss.xml";
            empAuthinticationForComet = "loginid";
            dayreportBean = "DayreportBeangss1";
            felxibleVehicleType = "true";
            scheduleCutOff = "true";
            scheduleCutOffStartDay = "Wednesday";
            scheduleCutOffStartTime = "10:00";
            scheduleCutOffDuration = "54:00";
            showDesigOrRole = "role";
            shiftExtensionWithoutSchedule = "yes";
            vehicleAssignCutOff = "true";
			vehicleAssignCutOffDuration="00:45";
			andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("gssUAT1"))
        {
            transportTeamNumber = "08033451343";
            transportTeamEmail = "blr2transport.sips.in@siemens.com";
            emailFlag = "uat";
            smsFlag = "uat";
            validationFlag = "api";
            utiltiyRun = "no";
            pullEmployee = "no";
            getEmpSource = "uat";
            emailForScheduleEmployee = "no";
            url = "jdbc:mysql://10.20.14.4:3306/atomcoredemouat";
            propertyFile = "gssdb.property";
            hibernateFile = "hibernate.cfg.gss.xml";
            empAuthinticationForComet = "loginid";
            dayreportBean = "DayreportBeangss1";
            felxibleVehicleType = "true";
            scheduleCutOff = "true";
            scheduleCutOffStartDay = "Wednesday";
            scheduleCutOffStartTime = "10:00";
            scheduleCutOffDuration = "54:00";
            showDesigOrRole = "role";
            shiftExtensionWithoutSchedule = "yes";
            vehicleAssignCutOff = "true";
			vehicleAssignCutOffDuration="00:45";
			andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("cd"))
        {
            transportTeamNumber = "9740255755";
            transportTeamEmail = "transport@cross-domain.com";
            emailFlag = "cd";
            smsFlag = "cd";
            validationFlag = "api";
            utiltiyRun = "yes";
            pullEmployee = "yes";
            getEmpSource = "cd";
            emailForScheduleEmployee = "yes";
            url = "jdbc:mysql://localhost:3306/atomcorecdo";
            propertyFile = "cddb.property";
            hibernateFile = "hibernate.cfg.cd.xml";
            APPROVAL_TYPE = "Approved by Transport Manager";
            empAuthinticationForComet = "empId";
            dayreportBean = "DayreportBeancd";
            showDesigOrRole = "designation";
            andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("cd1"))
        {
            transportTeamNumber = "9740255755";
            transportTeamEmail = "transport@cross-domain.com";
            emailFlag = "cd";
            smsFlag = "cd";
            validationFlag = "api";
            utiltiyRun = "no";
            pullEmployee = "yes";
            getEmpSource = "cd";
            emailForScheduleEmployee = "yes";
            url = "jdbc:mysql://10.20.14.4:3306/atomcorecdo";
            propertyFile = "cddb.property";
            hibernateFile = "hibernate.cfg.cd1.xml";
            APPROVAL_TYPE = "Approved by Transport Manager";
            empAuthinticationForComet = "empId";
            dayreportBean = "DayreportBeancd1";
            showDesigOrRole = "designation";
            andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("amat"))
        {
            transportTeamNumber = "9620812314";
            transportTeamEmail = "transport.helpdesk@agiledgesolutions.com";
            emailFlag = "uat";
            smsFlag = "demo";
            validationFlag = "api";
            utiltiyRun = "yes";
            pullEmployee = "no";
            getEmpSource = "amat";
            emailForScheduleEmployee = "no";
            url = "jdbc:mysql://localhost:3306/atomcoreamat";
            propertyFile = "amatdb.property";
            hibernateFile = "hibernate.cfg.amat.xml";
            empAuthinticationForComet = "pin";
            dayreportBean = "DayreportBeanamat";
            showDesigOrRole = "role";
            andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("test"))
        {
            transportTeamNumber = "";
            transportTeamEmail = "";
            emailFlag = "uat";
            smsFlag = "uat";
            validationFlag = "api";
            utiltiyRun = "no";
            pullEmployee = "no";
            getEmpSource = "uat";
            propertyFile = "cduat.property";
            url = "jdbc:mysql://localhost:3306/atomcorecdo";
            hibernateFile = "hibernate.cfg.xml";
            empAuthinticationForComet = "empId";
            dayreportBean = "DayreportBeancd";
            showDesigOrRole = "role";
            andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("cdtemp"))
        {
            transportTeamNumber = "9740255755";
            transportTeamEmail = "transport@cross-domain.com";
            emailFlag = "uat";
            smsFlag = "cdt";
            validationFlag = "api";
            utiltiyRun = "yes";
            pullEmployee = "yes";
            getEmpSource = "cd";
            emailForScheduleEmployee = "yes";
            url = "jdbc:mysql://localhost:3306/atomcorecdnew";
            propertyFile = "cddb.property";
            hibernateFile = "hibernate.cfg.cd.xml";
            empAuthinticationForComet = "empId";
            dayreportBean = "DayreportBeancd";
            showDesigOrRole = "role";
            andrioidTripDetailsCount="10";
        } else
        if(comp.equalsIgnoreCase("cdtemp1"))
        {
            transportTeamNumber = "9740255755";
            transportTeamEmail = "transport@cross-domain.com";
            emailFlag = "uat";
            smsFlag = "cdt";
            validationFlag = "api";
            utiltiyRun = "no";
            pullEmployee = "yes";
            getEmpSource = "cd";
            emailForScheduleEmployee = "yes";
            url = "jdbc:mysql://localhost:3306/atomcorecdnew";
            propertyFile = "cddb.property";
            hibernateFile = "hibernate.cfg.cd.xml";
            empAuthinticationForComet = "empId";
            dayreportBean = "DayreportBeancd1";
            showDesigOrRole = "role";
            andrioidTripDetailsCount="10";
        }else
            if(comp.equalsIgnoreCase("keo"))
            {
                transportTeamNumber = "08033451343";
                transportTeamEmail = "blr2transport.sips.in@siemens.com";
                emailFlag = "gss";
                smsFlag = "demo";
                validationFlag = "api";
                utiltiyRun = "yes";
                pullEmployee = "no";
                getEmpSource = "uat";
                emailForScheduleEmployee = "no";
                url = "jdbc:mysql://localhost:3306/atomcoredemo1";
                propertyFile = "gssdb.property";
                hibernateFile = "hibernate.cfg.gss.xml";
                empAuthinticationForComet = "loginid";
                dayreportBean = "DayreportBeangss";
                felxibleVehicleType = "true";
                showDesigOrRole = "role";
                andrioidTripDetailsCount="10";
        } else
        {
            felxibleVehicleType = "true";
            transportTeamNumber = "";
            transportTeamEmail = "";
            emailFlag = "uat";
            smsFlag = "Demo";
            validationFlag = "uat";
            utiltiyRun = "no";
            pullEmployee = "no";
            getEmpSource = "uat";
            propertyFile = "uatdb.property";
            emailForScheduleEmployee = "yes";
           url = "jdbc:mysql://180.179.227.159:3306/atomcoredemovisa1";
          //  url = "jdbc:mysql://180.179.227.102:3306/atomcorecdo";
            
            hibernateFile = "hibernate.cfg.gss.xml";
            empAuthinticationForComet = "pin";
            dayreportBean = "DayreportBeancd";
            showDesigOrRole = "role";
            APPROVAL_TYPE = "Approved by Transport Manager";
            shiftExtensionWithoutSchedule = "yes";
           
            driverPassword = "mobileno";
            escortpwd = "mobileNo";
            vehicleAssignCutOff = "false";
			
			andrioidTripDetailsCount="10";
        }
    }

    public static boolean readProperty()
    {
        boolean returnflag = false;
        try
        {
            Properties prop = new Properties();
            prop.load(new FileInputStream((new StringBuilder(String.valueOf(System.getProperty("user.home")))).append("/company.property").toString()));
            String key = prop.getProperty("key").toString();
            comp = key;
            returnflag = true;
        }
        catch(Exception e)
        {
            returnflag = false;
        }
        return returnflag;
    }

    public static String getCurdate()
    {
        Calendar curCal = Calendar.getInstance();
        curCal.setTime(new Date());
        String returnDate = (new StringBuilder()).append(curCal.get(5) > 9 ? ((Object) (Integer.valueOf(curCal.get(5)))) : ((Object) ((new StringBuilder("0")).append(curCal.get(5)).toString()))).append("/").append(curCal.get(2) + 1 > 9 ? ((Object) (Integer.valueOf(curCal.get(2) + 1))) : ((Object) ((new StringBuilder("0")).append(curCal.get(2) + 1).toString()))).append("/").append(curCal.get(1)).toString();
        try
        {
            if(scheduleCutOff.equalsIgnoreCase("true"))
            {
                Calendar cal = Calendar.getInstance();
                cal.setTime(new Date());
                int fromDay = OtherFunctions.getDayIndexFromStringWeekOfDay(scheduleCutOffStartDay);
                int toDayOfWeek = fromDay;
                String startTime = scheduleCutOffStartTime;
                int hourStart = Integer.parseInt(startTime.split(":")[0]);
                int minuteStart = Integer.parseInt(startTime.split(":")[1]);
                String allowedTime = scheduleCutOffDuration;
                int hour = hourStart + Integer.parseInt(allowedTime.split(":")[0]);
                int min = minuteStart + Integer.parseInt(allowedTime.split(":")[1]);
                Calendar fromTime = Calendar.getInstance();
                Calendar toTime = Calendar.getInstance();
                System.out.println((new StringBuilder("wednesday : ")).append(toDayOfWeek).toString());
                fromTime.set(7, toDayOfWeek);
                fromTime.set(11, hourStart);
                fromTime.set(12, minuteStart);
                toTime.setTime(fromTime.getTime());
                toTime.set(11, hour);
                toTime.set(12, min);
                Calendar curDate = Calendar.getInstance();
                curDate.setTime(new Date());
                if(curDate.compareTo(fromTime) >= 0 && curDate.compareTo(toTime) < 0)
                {
                    returnDate = (new StringBuilder()).append(toTime.get(5) > 9 ? ((Object) (Integer.valueOf(toTime.get(5)))) : ((Object) ((new StringBuilder("0")).append(toTime.get(5)).toString()))).append("/").append(toTime.get(2) + 1 > 9 ? ((Object) (Integer.valueOf(toTime.get(2) + 1))) : ((Object) ((new StringBuilder("0")).append(toTime.get(2) + 1).toString()))).append("/").append(toTime.get(1)).toString();
                }
            }
        }
        catch(Exception e)
        {
            System.out.println((new StringBuilder("Exception ")).append(e).toString());
        }
        return returnDate;
    }

}
